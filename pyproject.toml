[project]
name = "ai-starter"
version = "0.1.0"
description = "A starter template for Python projects leveraging AI tools."
authors = [
    {name = "Levente, CsÅ‘ke", email = "leventetsk@proton.me"}
]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "python-dotenv>=1.1.0",
    # Development dependencies
    "pytest>=8.3.5",
    "mypy>=1.15.0",
    "pytest-cov>=6.1.1",
    "pytest-mock==3.14.0",
    "ruff>=0.11.6",
]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
# These rule codes cover a range of checks:
# E, F: Pycodestyle and Pyflakes errors
# I: Import-related issues
# C, C4: Complexity and cyclomatic complexity checks
# B: Bugbear rules for spotting likely bugs
# W: Warnings
# A: Additional stylistic conventions
# N: Naming conventions
# S: Security related issues
# T: Type checking
# UP: Various code improvements
# RUF: Ruff-specific rules
# C901: Cyclomatic Complexity (traditionally from radon/flake8)
select = [
  "E",
  "F",
  "I",
  "C",
  "B",
  "W",
  "A",
  "C4",
  "N",
  "S",
  "T",
  "UP",
  "RUF",
  "C901"
]
ignore = ["D"]

[tool.ruff.format]
# Formatting options to align with Black's style
indent-style = "space"
quote-style = "double"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
exclude = ["^tests/"]

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "pytest.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["untyped_package.*"]
follow_untyped_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "integration: marks tests as integration (deselect with '-m \"not integration\"')"
]

[tool.uv.workspace]
members = [
    "starter",
]
